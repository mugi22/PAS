package co.id.pegadaian.pasg2.util;

import java.util.Calendar;

import org.hibernate.Session;

import co.id.pegadaian.pasg2.dao.TblUserGroupDAO;
import co.id.pegadaian.pasg2.pojo.TblUserGroup;


public  class Util {

	public static String firstUpper(String string){
		String s =Character.toUpperCase(string.charAt(0)) + string.substring(1);
		return s;
	}

	public static String firstLowerr(String string){
		String s =Character.toLowerCase(string.charAt(0)) + string.substring(1);
		return s;
	}
	
	
	public static boolean cekUserAdminMode(String userId, Session sess){
//		TblUserGroupDAO userGroupDAO = new TblUserGroupDAO(sess);
//		TblUserGroup tblUserGroup = userGroupDAO.getById(AppConstant.AdminModeGroup.AdminModeGroup, userId);
//		if (tblUserGroup==null){
//			return false;
//		}else
//		{
			return true;
//		}
	}
	
	
	/**
	   * Gets the rightmost <code>len</code> characters of a String.
	   *
	   * If <code>len</code> characters are not available, or the String
	   * is <code>null</code>, the String will be returned without an
	   * an exception. An exception is thrown if len is negative.
	   *
	   * <pre>
	   * StringUtils.right(null, *)    = null
	   * StringUtils.right(*, -ve)     = ""
	   * StringUtils.right("", *)      = ""
	   * StringUtils.right("abc", 0)   = ""
	   * StringUtils.right("abc", 2)   = "bc"
	   * StringUtils.right("abc", 4)   = "abc"
	   * </pre>
	   *
	   * @param str  the String to get the rightmost characters from, may be null
	   * @param len  the length of the required String, must be zero or positive
	   * @return the rightmost characters, <code>null</code> if null String input
	   */
	  public static String right(String str, int len) {
	      if (str == null) {
	          return null;
	      }
	      if (len < 0) {
	          return "";
	      }
	      if (str.length() <= len) {
	          return str;
	      }
	      return str.substring(str.length() - len);
	  }
	
	public static String getYear(){
		int year = Calendar.getInstance().get(Calendar.YEAR);
		return year+"";
	}
	
	
}
